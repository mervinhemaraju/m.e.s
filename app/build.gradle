plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
}

android {
    signingConfigs {
        release
        beta
    }

    namespace app_id
    compileSdk 35

    defaultConfig {
        applicationId "$app_id"
        minSdk 29
        targetSdk 35
        versionCode version_code
        versionName "$version_name"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk.debugSymbolLevel = "FULL"
        }

        beta {
            versionNameSuffix version_suffix_beta
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk.debugSymbolLevel = "FULL"
            matchingFallbacks = ['debug']
        }
        debug {
            versionNameSuffix version_suffix_dev
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        compose true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    androidResources {
        generateLocaleConfig true
    }
    ndkVersion '28.0.12674087 rc2'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def props = new Properties()
def propFile = new File("keystore.properties")

// Check if we can read the file
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    // Before assigning, we check if key is present
    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        // Load release configs
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']

        // Load beta configs
        android.signingConfigs.beta.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.beta.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.beta.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.beta.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
        android.buildTypes.beta.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
    android.buildTypes.beta.signingConfig = null
}

dependencies {

    // Android Material Design Components
    implementation "com.google.android.material:material:$com_google_android_material_version"
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material3_window_size_class_version"
    implementation "androidx.compose.material:material-icons-extended:$material_icons"

    // Android Compose UI
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"

    // Android App Compat
    implementation "androidx.appcompat:appcompat:$app_compat_version"

    // Android Jetpack Components
    implementation "androidx.navigation:navigation-compose:$navigation_version"
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // Android Components
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.datastore:datastore-preferences:$datastore_preferences_version"
    implementation "androidx.window:window-core:$window_core_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraint_layout_compose_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.core:core-splashscreen:$splash_screen_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_compose_version"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compose_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // Accompanists
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanists_version"
    implementation "com.google.accompanist:accompanist-pager:$accompanists_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanists_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanists_version"

    // Google Libraries
    implementation "com.google.code.gson:gson:$gson_version"

    // External Libraries
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofit2_kotlinx_serialization_convertor_version"
    // Kotlinx
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_json_version"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:$kotlinx_collections_immutable_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_reflect_version"
    // Coil
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Unit Testings
    testImplementation "junit:junit:$junit_version"

    // Android Testing
    androidTestImplementation "androidx.test.ext:junit:$android_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$android_espresson_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}